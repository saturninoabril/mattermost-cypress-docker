version: 2.1
orbs:
  node: circleci/node@4.1.0

workflows:
  build:
    jobs:
      - e2e-test-1:
          context: cypress-circleci-env
      - e2e-test-2:
          context: cypress-circleci-env
      - e2e-test-3:
          context: cypress-circleci-env
      - e2e-test-4:
          context: cypress-circleci-env
      - merge-and-save-test-reports:
          context: cypress-circleci-env
          requires:
            - e2e-test-1
            - e2e-test-2
            - e2e-test-3
            - e2e-test-4

commands:
  setup-client:
    description: "Setup client"
    steps:
      - run:
          name: Setup client
          command: |
            whoami
            sudo apt-get update
            sudo apt-get install libxss1
  setup-required-files:
    description: "Setup required files"
    steps:
      - run:
          name: Setup required files
          command: |
            wget -O e2e/cypress/fixtures/com.mattermost.draw-plugin.tar.gz https://github.com/jespino/mattermost-plugin-draw/releases/download/v0.0.4/com.mattermost.draw-plugin-0.0.4.tar.gz
            wget -O e2e/cypress/fixtures/com.github.matterpoll.matterpoll.tar.gz https://github.com/matterpoll/matterpoll/releases/download/v1.3.0/com.github.matterpoll.matterpoll-1.3.0.tar.gz
            wget -O e2e/cypress/fixtures/com.mattermost.demo-plugin-0.1.0.tar.gz https://github.com/mattermost/mattermost-plugin-demo/releases/download/v0.1.0/com.mattermost.demo-plugin-0.1.0.tar.gz
            wget -O e2e/cypress/fixtures/com.mattermost.demo-plugin-0.2.0.tar.gz https://github.com/mattermost/mattermost-plugin-demo/releases/download/v0.2.0/com.mattermost.demo-plugin-0.2.0.tar.gz
            echo $USERS > e2e/cypress/fixtures/users.txt
  install-npm:
    description: "Install npm packages"
    steps:
      - run:
          name: Install npm packages
          command: cd e2e && npm install
  save-report:
    description: "Save and publish reports"
    steps:
      - run:
          name: Save and publish reports
          when: always
          command: |
            export BRANCH=$CIRCLE_BRANCH
            export BUILD_ID=$CIRCLE_BUILD_NUM

            # This is how it should be on main org repo
            # export PULL_REQUEST=$CIRCLE_PULL_REQUESTS

            # This is how it should be on main org repo
            # Should match the tag in mattermost/mattermost-enterprise-edition image
            # export BUILD_TAG="${CIRCLE_SHA1:0:7}"
            export BUILD_TAG=$MM_DOCKER_IMAGE_TAG

            export TM4J_ENABLE=true
            export JIRA_PROJECT_KEY=MM
            export TM4J_FOLDER_ID=1044238

            export FAILURE_MESSAGE="At least one test has failed."
            export RESULTS_OUTPUT="results-output.txt"

            cd e2e && node save_report.js |& tee $RESULTS_OUTPUT; if grep "$FAILURE_MESSAGE" "$RESULTS_OUTPUT"; then exit 1; fi

jobs:
  merge-and-save-test-reports:
    docker:
      - image: circleci/node:lts-buster-browsers-legacy
    working_directory: ~/mattermost
    environment:
      MM_DOCKER_IMAGE_TAG: mm-cloud-ee:test-fff95bc-16
      TYPE: NONE
      PULL_REQUEST:
      BROWSER: chrome
      HEADLESS: true
      DASHBOARD_ENABLE: false
      FULL_REPORT: true
    steps:
      - checkout
      - attach_workspace:
          at: ~/mattermost
      - install-npm
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "e2e/package-lock.json" }}
          paths:
            -  ./e2e/node_modules
      - run:
          name: Merge and save reports
          no_output_timeout: 30m
          command: |
            cd e2e
            mkdir results
            cp -r ~/mattermost/e2e-test-1/e2e/results .
            cp -r ~/mattermost/e2e-test-2/e2e/results .
            cp -r ~/mattermost/e2e-test-3/e2e/results .
            cp -r ~/mattermost/e2e-test-4/e2e/results .

            cd ..
      - save-report
      - store_artifacts:
          path: ~/mattermost/e2e/results
      - store_test_results:
          when: always
          path: ~/mattermost/e2e/results/junit

  e2e-test-1:
    docker:
      - image: circleci/node:lts-buster-browsers-legacy
    working_directory: ~/mattermost/e2e-test-1
    environment:
      CI_BASE_URL: test-fff95bc-16-cloud-1.dev.spinmint.com
      BROWSER: chrome
      HEADLESS: true
    steps:
      - checkout
      - attach_workspace:
          at: ~/mattermost
      - setup-client
      - setup-required-files
      - install-npm
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "e2e/package-lock.json" }}
          paths:
            -  ./e2e/node_modules
      - run:
          name: Run Cypress Test
          no_output_timeout: 30m
          command: |
            export CYPRESS_baseUrl="http://${CI_BASE_URL}:8065"
            export CYPRESS_dbConnection="postgres://mmuser:mostest@${CI_BASE_URL}:5432/mattermost_test?sslmode=disable\u0026connect_timeout=10"

            export CYPRESS_webhookBaseUrl="http://${CI_BASE_URL}:3000"
            export CYPRESS_smtpUrl="http://${CI_BASE_URL}:10080"
            export CYPRESS_ciBaseUrl=${CI_BASE_URL}

            export CYPRESS_chromeWebSecurity=true
            export CYPRESS_numberOfTrialUsers=10000
            export CYPRESS_resetBeforeTest=true
            export CYPRESS_runLDAPSync=false
            # export CYPRESS_runWithEELicense=true
            export CYPRESS_serverEdition=Cloud

            until curl --max-time 5 --output - ${CYPRESS_baseUrl}; do echo waiting for app server; sleep 5; done;

            cd e2e && node run_tests.js --stage='@prod' --excludeGroup='@not_cloud,@e20_only,@te_only' --part=1 --of=4
      - persist_to_workspace:
          root: ~/mattermost
          paths:
            - e2e-test-1/e2e/results
      - store_artifacts:
          path: ~/mattermost/e2e-test-1/e2e/results
      - store_test_results:
          when: always
          path: ~/mattermost/e2e-test-1/e2e/results/junit

  e2e-test-2:
    docker:
      - image: circleci/node:lts-buster-browsers-legacy
    working_directory: ~/mattermost/e2e-test-2
    environment:
      CI_BASE_URL: test-fff95bc-16-cloud-2.dev.spinmint.com
      BROWSER: chrome
      HEADLESS: true
    steps:
      - checkout
      - attach_workspace:
          at: ~/mattermost
      - setup-client
      - setup-required-files
      - install-npm
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "e2e/package-lock.json" }}
          paths:
            -  ./e2e/node_modules
      - run:
          name: Run Cypress Test
          no_output_timeout: 30m
          command: |
            export CYPRESS_baseUrl="http://${CI_BASE_URL}:8065"
            export CYPRESS_dbConnection="postgres://mmuser:mostest@${CI_BASE_URL}:5432/mattermost_test?sslmode=disable\u0026connect_timeout=10"

            export CYPRESS_webhookBaseUrl="http://${CI_BASE_URL}:3000"
            export CYPRESS_smtpUrl="http://${CI_BASE_URL}:10080"
            export CYPRESS_ciBaseUrl=${CI_BASE_URL}

            export CYPRESS_chromeWebSecurity=true
            export CYPRESS_numberOfTrialUsers=10000
            export CYPRESS_resetBeforeTest=true
            export CYPRESS_runLDAPSync=false
            # export CYPRESS_runWithEELicense=true
            export CYPRESS_serverEdition=Cloud

            until curl --max-time 5 --output - ${CYPRESS_baseUrl}; do echo waiting for app server; sleep 5; done;

            cd e2e && node run_tests.js --stage='@prod' --excludeGroup='@not_cloud,@e20_only,@te_only' --part=2 --of=4
      - persist_to_workspace:
          root: ~/mattermost
          paths:
            - e2e-test-2/e2e/results
      - store_artifacts:
          path: ~/mattermost/e2e-test-2/e2e/results
      - store_test_results:
          when: always
          path: ~/mattermost/e2e-test-2/e2e/results/junit

  e2e-test-3:
    docker:
      - image: circleci/node:lts-buster-browsers-legacy
    working_directory: ~/mattermost/e2e-test-3
    environment:
      CI_BASE_URL: test-fff95bc-16-cloud-3.dev.spinmint.com
      BROWSER: chrome
      HEADLESS: true
    steps:
      - checkout
      - attach_workspace:
          at: ~/mattermost
      - setup-client
      - setup-required-files
      - install-npm
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "e2e/package-lock.json" }}
          paths:
            -  ./e2e/node_modules
      - run:
          name: Run Cypress Test
          no_output_timeout: 30m
          command: |
            export CYPRESS_baseUrl="http://${CI_BASE_URL}:8065"
            export CYPRESS_dbConnection="postgres://mmuser:mostest@${CI_BASE_URL}:5432/mattermost_test?sslmode=disable\u0026connect_timeout=10"

            export CYPRESS_webhookBaseUrl="http://${CI_BASE_URL}:3000"
            export CYPRESS_smtpUrl="http://${CI_BASE_URL}:10080"
            export CYPRESS_ciBaseUrl=${CI_BASE_URL}

            export CYPRESS_chromeWebSecurity=true
            export CYPRESS_numberOfTrialUsers=10000
            export CYPRESS_resetBeforeTest=true
            export CYPRESS_runLDAPSync=false
            # export CYPRESS_runWithEELicense=true
            export CYPRESS_serverEdition=Cloud

            until curl --max-time 5 --output - ${CYPRESS_baseUrl}; do echo waiting for app server; sleep 5; done;

            cd e2e && node run_tests.js --stage='@prod' --excludeGroup='@not_cloud,@e20_only,@te_only' --part=3 --of=4
      - persist_to_workspace:
          root: ~/mattermost
          paths:
            - e2e-test-3/e2e/results
      - store_artifacts:
          path: ~/mattermost/e2e-test-3/e2e/results
      - store_test_results:
          when: always
          path: ~/mattermost/e2e-test-3/e2e/results/junit

  e2e-test-4:
    docker:
      - image: circleci/node:lts-buster-browsers-legacy
    working_directory: ~/mattermost/e2e-test-4
    environment:
      CI_BASE_URL: test-fff95bc-16-cloud-4.dev.spinmint.com
      BROWSER: chrome
      HEADLESS: true
    steps:
      - checkout
      - attach_workspace:
          at: ~/mattermost
      - setup-client
      - setup-required-files
      - install-npm
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "e2e/package-lock.json" }}
          paths:
            -  ./e2e/node_modules
      - run:
          name: Run Cypress Test
          no_output_timeout: 30m
          command: |
            export CYPRESS_baseUrl="http://${CI_BASE_URL}:8065"
            export CYPRESS_dbConnection="postgres://mmuser:mostest@${CI_BASE_URL}:5432/mattermost_test?sslmode=disable\u0026connect_timeout=10"

            export CYPRESS_webhookBaseUrl="http://${CI_BASE_URL}:3000"
            export CYPRESS_smtpUrl="http://${CI_BASE_URL}:10080"
            export CYPRESS_ciBaseUrl=${CI_BASE_URL}

            export CYPRESS_chromeWebSecurity=true
            export CYPRESS_numberOfTrialUsers=10000
            export CYPRESS_resetBeforeTest=true
            export CYPRESS_runLDAPSync=false
            # export CYPRESS_runWithEELicense=true
            export CYPRESS_serverEdition=Cloud

            until curl --max-time 5 --output - ${CYPRESS_baseUrl}; do echo waiting for app server; sleep 5; done;

            cd e2e && node run_tests.js --stage='@prod' --excludeGroup='@not_cloud,@e20_only,@te_only' --part=4 --of=4
      - persist_to_workspace:
          root: ~/mattermost
          paths:
            - e2e-test-4/e2e/results
      - store_artifacts:
          path: ~/mattermost/e2e-test-4/e2e/results
      - store_test_results:
          when: always
          path: ~/mattermost/e2e-test-4/e2e/results/junit
