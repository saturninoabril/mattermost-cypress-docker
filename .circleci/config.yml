version: 2.1
orbs:
  node: circleci/node@1.1.6

workflows:
  build:
    jobs:
      - test-1:
          context: cypress-circleci-env
      - test-2:
          context: cypress-circleci-env
      - test-3:
          context: cypress-circleci-env
      - test-4:
          context: cypress-circleci-env
      - save-report:
          context: cypress-circleci-env
          requires:
            - test-1
            - test-2
            - test-3
            - test-4

commands:
  setup-client:
    description: "Setup client"
    steps:
      - run:
          name: Setup client
          command: |
            whoami
            sudo apt-get update
            sudo apt-get install libxss1
  setup-required-files:
    description: "Setup required files"
    steps:
      - run:
          name: Setup required files
          command: |
            pwd
            ls -rtl
            wget -O mattermost-cypress-docker/e2e/cypress/fixtures/com.mattermost.draw-plugin.tar.gz https://github.com/jespino/mattermost-plugin-draw/releases/download/v0.0.4/com.mattermost.draw-plugin-0.0.4.tar.gz
            wget -O mattermost-cypress-docker/e2e/cypress/fixtures/com.github.matterpoll.matterpoll.tar.gz https://github.com/matterpoll/matterpoll/releases/download/v1.3.0/com.github.matterpoll.matterpoll-1.3.0.tar.gz
            wget -O mattermost-cypress-docker/e2e/cypress/fixtures/com.mattermost.demo-plugin-0.1.0.tar.gz https://github.com/mattermost/mattermost-plugin-demo/releases/download/v0.1.0/com.mattermost.demo-plugin-0.1.0.tar.gz
            wget -O mattermost-cypress-docker/e2e/cypress/fixtures/com.mattermost.demo-plugin-0.2.0.tar.gz https://github.com/mattermost/mattermost-plugin-demo/releases/download/v0.2.0/com.mattermost.demo-plugin-0.2.0.tar.gz
            echo $USERS > mattermost-cypress-docker/e2e/cypress/fixtures/users.txt

            ls -rtl mattermost/mattermost-cypress-docker/e2e/cypress/fixtures
  install-npm:
    description: "Install npm packages"
    steps:
      - run:
          name: Install npm packages
          command: cd mattermost-cypress-docker/e2e && npm install
  mark-test-done:
    description: "Add 1 as test done"
    steps:
      - run:
          name: Add 1 as test done
          command: |
            echo "export TEST_DONE=$((TEST_DONE+1))" >> $BASH_ENV
  save-report:
    description: "Save and publish reports"
    steps:
      - run:
          name: Save and publish reports
          when: always
          command: |
            ls -rtl .
            ls -rtl ~/mattermost-cypress-docker/e2e/results
            echo "$TEST_DONE"

            export BRANCH=$CIRCLE_BRANCH
            export BUILD_ID=$CIRCLE_BUILD_NUM

            # This is how it should be on main org repo
            # export PULL_REQUEST=$CIRCLE_PULL_REQUESTS

            # This is how it should be on main org repo
            # Should match the tag in mattermost/mattermost-enterprise-edition image
            # export BUILD_TAG="${CIRCLE_SHA1:0:7}"
            export BUILD_TAG=$MM_DOCKER_IMAGE_TAG

            export TM4J_ENABLE=true
            export JIRA_PROJECT_KEY=MM
            export TM4J_FOLDER_ID=1044238

            cd e2e && node save_report.js

jobs:
  save-report:
    docker:
      - image: circleci/node:14-stretch-browsers-legacy
    working_directory: ~/mattermost
    steps:
      - store_artifacts:
          path: ~/mattermost/mattermost-cypress-docker/e2e/results
      - store_test_results:
          when: always
          path: ~/mattermost/mattermost-cypress-docker/e2e/results/junit
      - save-report
  test-1:
    docker:
      - image: circleci/node:14-stretch-browsers-legacy
    working_directory: ~/mattermost
    environment:
      CI_BASE_URL: ec2-54-173-221-175.compute-1.amazonaws.com
      TYPE: NONE
      PULL_REQUEST:
      BROWSER: chrome
      HEADLESS: true
      DASHBOARD_ENABLE: false
      FULL_REPORT: false
    steps:
      - checkout
      - attach_workspace:
          at: ~/mattermost/
      - setup-client
      - setup-required-files
      - install-npm
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "e2e/package-lock.json" }}
          paths:
            - ./mattermost-cypress-docker/e2e/node_modules
      - run:
          name: Run Cypress Test
          no_output_timeout: 30m
          command: |
            pwd
            ls -rtl
            ls -rtl ~/mattermost/mattermost-cypress-docker
            export CYPRESS_baseUrl="http://${CI_BASE_URL}:8065"
            export CYPRESS_dbConnection="postgres://mmuser:mostest@${CI_BASE_URL}:5432/mattermost_test?sslmode=disable\u0026connect_timeout=10"

            export CYPRESS_webhookBaseUrl="http://${CI_BASE_URL}:3000"
            export CYPRESS_smtpUrl="http://${CI_BASE_URL}:10080"
            export CYPRESS_ciBaseUrl=${CI_BASE_URL}

            export CYPRESS_chromeWebSecurity=true
            export CYPRESS_numberOfTrialUsers=10000
            export CYPRESS_resetBeforeTest=true
            export CYPRESS_runLDAPSync=false
            # export CYPRESS_runWithEELicense=true
            export CYPRESS_runOnCloud=true
            export FAILURE_MESSAGE="At least one test has failed."
            export RESULTS_OUTPUT="results-output.txt"

            echo "$CI_BASE_URL"
            echo "$CYPRESS_baseUrl"
            echo "$CYPRESS_dbConnection"
            echo "$CYPRESS_webhookBaseUrl"
            echo "$CYPRESS_smtpUrl"

            until curl --max-time 5 --output - ${CYPRESS_baseUrl}; do echo waiting for app server; sleep 5; done;

            cd mattermost-cypress-docker/e2e && node run_tests.js --stage='@prod' --group='@accessibility' --part=1 --of=4 |& tee $RESULTS_OUTPUT; if grep "$FAILURE_MESSAGE" "$RESULTS_OUTPUT"; then exit 1; fi
      - mark-test-done
      - persist_to_workspace:
          root: ~/mattermost
          paths:
            - mattermost-cypress-docker/e2e/results
      - run:
          name: Debug
          no_output_timeout: 30m
          command: |
            pwd
            ls -rtl
            ls -rtl .
            ls -rtl ~/mattermost/mattermost-cypress-docker/e2e/results
      - store_artifacts:
          path: ~/mattermost/mattermost-cypress-docker/e2e/results
      - store_test_results:
          when: always
          path: ~/mattermost/mattermost-cypress-docker/e2e/results/junit
      - save-report

  test-2:
    docker:
      - image: circleci/node:14-stretch-browsers-legacy
    working_directory: ~/mattermost
    environment:
      CI_BASE_URL: ec2-52-207-213-253.compute-1.amazonaws.com
      TYPE: NONE
      PULL_REQUEST:
      BROWSER: chrome
      HEADLESS: true
      DASHBOARD_ENABLE: false
      FULL_REPORT: false
    steps:
      - checkout
      - attach_workspace:
          at: ~/mattermost/
      - setup-client
      - setup-required-files
      - install-npm
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "e2e/package-lock.json" }}
          paths:
            - ./mattermost-cypress-docker/e2e/node_modules
      - run:
          name: Run Cypress Test
          no_output_timeout: 30m
          command: |
            pwd
            ls -rtl
            ls -rtl ~/mattermost/mattermost-cypress-docker
            export CYPRESS_baseUrl="http://${CI_BASE_URL}:8065"
            export CYPRESS_dbConnection="postgres://mmuser:mostest@${CI_BASE_URL}:5432/mattermost_test?sslmode=disable\u0026connect_timeout=10"

            export CYPRESS_webhookBaseUrl="http://${CI_BASE_URL}:3000"
            export CYPRESS_smtpUrl="http://${CI_BASE_URL}:10080"
            export CYPRESS_ciBaseUrl=${CI_BASE_URL}

            export CYPRESS_chromeWebSecurity=true
            export CYPRESS_numberOfTrialUsers=10000
            export CYPRESS_resetBeforeTest=true
            export CYPRESS_runLDAPSync=false
            # export CYPRESS_runWithEELicense=true
            export CYPRESS_runOnCloud=true
            export FAILURE_MESSAGE="At least one test has failed."
            export RESULTS_OUTPUT="results-output.txt"

            echo "$CI_BASE_URL"
            echo "$CYPRESS_baseUrl"
            echo "$CYPRESS_dbConnection"
            echo "$CYPRESS_webhookBaseUrl"
            echo "$CYPRESS_smtpUrl"

            until curl --max-time 5 --output - ${CYPRESS_baseUrl}; do echo waiting for app server; sleep 5; done;

            cd mattermost-cypress-docker/e2e && node run_tests.js --stage='@prod' --group='@accessibility' --part=2 --of=4 |& tee $RESULTS_OUTPUT; if grep "$FAILURE_MESSAGE" "$RESULTS_OUTPUT"; then exit 1; fi
      - mark-test-done
      - persist_to_workspace:
          root: ~/mattermost
          paths:
            - mattermost-cypress-docker/e2e/results
      - run:
          name: Debug
          no_output_timeout: 30m
          command: |
            pwd
            ls -rtl
            ls -rtl .
            ls -rtl ~/mattermost/mattermost-cypress-docker/e2e/results
      - store_artifacts:
          path: ~/mattermost/mattermost-cypress-docker/e2e/results
      - store_test_results:
          when: always
          path: ~/mattermost/mattermost-cypress-docker/e2e/results/junit
      - save-report

  test-3:
    docker:
      - image: circleci/node:14-stretch-browsers-legacy
    working_directory: ~/mattermost
    environment:
      CI_BASE_URL: ec2-54-172-222-17.compute-1.amazonaws.com
      TYPE: NONE
      PULL_REQUEST:
      BROWSER: chrome
      HEADLESS: true
      DASHBOARD_ENABLE: false
      FULL_REPORT: false
    steps:
      - checkout
      - attach_workspace:
          at: ~/mattermost/
      - setup-client
      - setup-required-files
      - install-npm
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "e2e/package-lock.json" }}
          paths:
            - ./mattermost-cypress-docker/e2e/node_modules
      - run:
          name: Run Cypress Test
          no_output_timeout: 30m
          command: |
            pwd
            ls -rtl
            ls -rtl ~/mattermost/mattermost-cypress-docker
            export CYPRESS_baseUrl="http://${CI_BASE_URL}:8065"
            export CYPRESS_dbConnection="postgres://mmuser:mostest@${CI_BASE_URL}:5432/mattermost_test?sslmode=disable\u0026connect_timeout=10"

            export CYPRESS_webhookBaseUrl="http://${CI_BASE_URL}:3000"
            export CYPRESS_smtpUrl="http://${CI_BASE_URL}:10080"
            export CYPRESS_ciBaseUrl=${CI_BASE_URL}

            export CYPRESS_chromeWebSecurity=true
            export CYPRESS_numberOfTrialUsers=10000
            export CYPRESS_resetBeforeTest=true
            export CYPRESS_runLDAPSync=false
            # export CYPRESS_runWithEELicense=true
            export CYPRESS_runOnCloud=true
            export FAILURE_MESSAGE="At least one test has failed."
            export RESULTS_OUTPUT="results-output.txt"

            echo "$CI_BASE_URL"
            echo "$CYPRESS_baseUrl"
            echo "$CYPRESS_dbConnection"
            echo "$CYPRESS_webhookBaseUrl"
            echo "$CYPRESS_smtpUrl"

            until curl --max-time 5 --output - ${CYPRESS_baseUrl}; do echo waiting for app server; sleep 5; done;

            cd mattermost-cypress-docker/e2e && node run_tests.js --stage='@prod' --group='@accessibility' --part=3 --of=4 |& tee $RESULTS_OUTPUT; if grep "$FAILURE_MESSAGE" "$RESULTS_OUTPUT"; then exit 1; fi
      - mark-test-done
      - persist_to_workspace:
          root: ~/mattermost
          paths:
            - mattermost-cypress-docker/e2e/results
      - run:
          name: Debug
          no_output_timeout: 30m
          command: |
            pwd
            ls -rtl
            ls -rtl .
            ls -rtl ~/mattermost/mattermost-cypress-docker/e2e/results
      - store_artifacts:
          path: ~/mattermost/mattermost-cypress-docker/e2e/results
      - store_test_results:
          when: always
          path: ~/mattermost/mattermost-cypress-docker/e2e/results/junit
      - save-report

  test-4:
    docker:
      - image: circleci/node:14-stretch-browsers-legacy
    working_directory: ~/mattermost
    environment:
      CI_BASE_URL: ec2-3-84-83-19.compute-1.amazonaws.com
      TYPE: NONE
      PULL_REQUEST:
      BROWSER: chrome
      HEADLESS: true
      DASHBOARD_ENABLE: false
      FULL_REPORT: false
    steps:
      - checkout
      - attach_workspace:
          at: ~/mattermost/
      - setup-client
      - setup-required-files
      - install-npm
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "e2e/package-lock.json" }}
          paths:
            - ./mattermost-cypress-docker/e2e/node_modules
      - run:
          name: Run Cypress Test
          no_output_timeout: 30m
          command: |
            pwd
            ls -rtl
            ls -rtl ~/mattermost/mattermost-cypress-docker
            export CYPRESS_baseUrl="http://${CI_BASE_URL}:8065"
            export CYPRESS_dbConnection="postgres://mmuser:mostest@${CI_BASE_URL}:5432/mattermost_test?sslmode=disable\u0026connect_timeout=10"

            export CYPRESS_webhookBaseUrl="http://${CI_BASE_URL}:3000"
            export CYPRESS_smtpUrl="http://${CI_BASE_URL}:10080"
            export CYPRESS_ciBaseUrl=${CI_BASE_URL}

            export CYPRESS_chromeWebSecurity=true
            export CYPRESS_numberOfTrialUsers=10000
            export CYPRESS_resetBeforeTest=true
            export CYPRESS_runLDAPSync=false
            # export CYPRESS_runWithEELicense=true
            export CYPRESS_runOnCloud=true
            export FAILURE_MESSAGE="At least one test has failed."
            export RESULTS_OUTPUT="results-output.txt"

            echo "$CI_BASE_URL"
            echo "$CYPRESS_baseUrl"
            echo "$CYPRESS_dbConnection"
            echo "$CYPRESS_webhookBaseUrl"
            echo "$CYPRESS_smtpUrl"

            until curl --max-time 5 --output - ${CYPRESS_baseUrl}; do echo waiting for app server; sleep 5; done;

            cd mattermost-cypress-docker/e2e && node run_tests.js --stage='@prod' --group='@accessibility' --part=4 --of=4 |& tee $RESULTS_OUTPUT; if grep "$FAILURE_MESSAGE" "$RESULTS_OUTPUT"; then exit 1; fi
      - mark-test-done
      - persist_to_workspace:
          root: ~/mattermost
          paths:
            - mattermost-cypress-docker/e2e/results
      - run:
          name: Debug
          no_output_timeout: 30m
          command: |
            pwd
            ls -rtl
            ls -rtl .
            ls -rtl ~/mattermost/mattermost-cypress-docker/e2e/results
      - store_artifacts:
          path: ~/mattermost/mattermost-cypress-docker/e2e/results
      - store_test_results:
          when: always
          path: ~/mattermost/mattermost-cypress-docker/e2e/results/junit
      - save-report
